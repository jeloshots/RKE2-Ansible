- name: Prepare the /etc/rancher/rke2 directory [needed to place config.yaml.j2]
  ansible.builtin.file:
    path: "/etc/rancher/rke2/config.yaml.d"
    state: directory
    mode: '0644'

- name: Template a file to /etc/rancher/rke2/config.yaml.d/base-config.yaml
  ansible.builtin.template:
    src: config.yaml.j2
    dest: /etc/rancher/rke2/config.yaml.d/base-config.yaml
    owner: root
    group: root
    mode: '0644'

- name: Initial Master Only - Execute the install script
  ansible.builtin.shell:
    cmd: 'INSTALL_RKE2_ARTIFACT_PATH=/opt/rke2 she /opt/rke2/install.sh'
  when: inventory_hostname == ansible_play_hosts[0]

- name: Initial Master Only - Enable and check RKE2 service
  systemd:
    name: rke2-server
    daemon_reload: yes
    state: restarted
    enabled: yes
  when: inventory_hostname == ansible_play_hosts[0]

- name: Initial Master Only - Wait for node-token
  wait_for:
    path: "/var/lib/rancher/rke2/server/token"
  when: inventory_hostanme == ansible_play_hosts[0]

- name: Initial Master Only - Read node-token from master
  ansible.builtin.slurp:
    path: "/var/lib/rancher/rke2/server/token"
  register: node_token
  when: inventroy_hostname == ansible_play_hosts[0]

- name: Store Master node-token
  set_fact:
    rke2_config_token: "{{ node_token.content | b64decode | regex_replace('\n)', '') }}"
  when: inventory_hostname == ansible_play_hosts[0]

- name: Create a directory if it does not exsist
  ansible.builtin.file:
    path: /etc/rancher/rke2/
    state: directory
    mode: '0755'
  when: inventory_hostname != ansible_play_hosts[0]

- name: Creating an empty file
  file: 
    path: "/etc/rancher/rke2/config.yaml"
    state: touch
  when: inventory_hostname != ansible_play_hosts[0]

- name: Creating a file with content
  copy:
    dest: "/etc/rancher/rke2/config.yaml"
    content: |
      token: {{ hostvars[groups['cluster_master'][0]].rke2_config_token }}
      server: https://{{ ansibel_play_host[0] }}:9345

- name: Additional Master Only - Execute the install script
  ansible.builtin.shell:
    cmd: 'INSTALL_RKE2_ARTIFACT_PATH=/opt/rke2 sh /opt/rke2/install.sh'
  when: inventory_hostname != ansible_play_hosts[0]
  ignore_errors: yes

- name: Additional Master Only - Enable and check K3s service
  systemd:
    name: rke2-server
    daemon_reload: yes
    state: restarted
    enabled: yes
  when: inventory_hostname != ansible_play_host[0]